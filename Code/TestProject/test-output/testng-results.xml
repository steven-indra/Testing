<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="automationTest" duration-ms="139822" started-at="2018-01-20T08:22:50Z" finished-at="2018-01-20T08:25:09Z">
    <groups>
    </groups>
    <test name="Login test" duration-ms="55881" started-at="2018-01-20T08:22:50Z" finished-at="2018-01-20T08:23:45Z">
      <class name="test.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.LoginTest@77caeb3e]" name="beforeTest" is-config="true" duration-ms="2679" started-at="2018-01-20T15:22:50Z" finished-at="2018-01-20T15:22:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.LoginTest@77caeb3e]" name="beforeMethod" is-config="true" duration-ms="37122" started-at="2018-01-20T15:22:52Z" finished-at="2018-01-20T15:23:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tryFailureLogin(java.lang.String)[pri:0, instance:test.LoginTest@77caeb3e]" name="tryFailureLogin" duration-ms="6400" started-at="2018-01-20T15:23:29Z" finished-at="2018-01-20T15:23:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryFailureLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.LoginTest@77caeb3e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-01-20T15:23:36Z" finished-at="2018-01-20T15:23:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.LoginTest@77caeb3e]" name="beforeMethod" is-config="true" duration-ms="2763" started-at="2018-01-20T15:23:36Z" finished-at="2018-01-20T15:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="trySuccessLogin(java.lang.String, java.lang.String)[pri:0, instance:test.LoginTest@77caeb3e]" name="trySuccessLogin" duration-ms="6234" started-at="2018-01-20T15:23:39Z" finished-at="2018-01-20T15:23:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email@test2.como]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trySuccessLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.LoginTest@77caeb3e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-01-20T15:23:45Z" finished-at="2018-01-20T15:23:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.LoginTest@77caeb3e]" name="afterTest" is-config="true" duration-ms="659" started-at="2018-01-20T15:23:45Z" finished-at="2018-01-20T15:23:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.LoginTest -->
    </test> <!-- Login test -->
    <test name="Register test" duration-ms="54795" started-at="2018-01-20T08:23:46Z" finished-at="2018-01-20T08:24:40Z">
      <class name="test.RegisterTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.RegisterTest@3c0ecd4b]" name="beforeTest" is-config="true" duration-ms="1881" started-at="2018-01-20T15:23:46Z" finished-at="2018-01-20T15:23:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.RegisterTest@3c0ecd4b]" name="beforeMethod" is-config="true" duration-ms="39198" started-at="2018-01-20T15:23:47Z" finished-at="2018-01-20T15:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="registerTest(java.lang.String, java.lang.String)[pri:0, instance:test.RegisterTest@3c0ecd4b]" name="registerTest" duration-ms="13043" started-at="2018-01-20T15:24:27Z" finished-at="2018-01-20T15:24:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[newEmail@asdfs.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.RegisterTest@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-01-20T15:24:40Z" finished-at="2018-01-20T15:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.RegisterTest@3c0ecd4b]" name="afterTest" is-config="true" duration-ms="670" started-at="2018-01-20T15:24:40Z" finished-at="2018-01-20T15:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.RegisterTest -->
    </test> <!-- Register test -->
    <test name="Bug test" duration-ms="29003" started-at="2018-01-20T08:24:40Z" finished-at="2018-01-20T08:25:09Z">
      <class name="test.BugTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.BugTest@6500df86]" name="beforeTest" is-config="true" duration-ms="1941" started-at="2018-01-20T15:24:40Z" finished-at="2018-01-20T15:24:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.BugTest@6500df86]" name="beforeMethod" is-config="true" duration-ms="21661" started-at="2018-01-20T15:24:42Z" finished-at="2018-01-20T15:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="BUG001()[pri:0, instance:test.BugTest@6500df86]" name="BUG001" duration-ms="4717" started-at="2018-01-20T15:25:04Z" finished-at="2018-01-20T15:25:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[There should be no alert displayed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: There should be no alert displayed expected [false] but found [true]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertFalse(Assert.java:65)at test.BugTest.BUG001(BugTest.java:12)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BUG001 -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.BugTest@6500df86]" name="afterTest" is-config="true" duration-ms="679" started-at="2018-01-20T15:25:09Z" finished-at="2018-01-20T15:25:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.BugTest@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-01-20T15:25:09Z" finished-at="2018-01-20T15:25:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.BugTest -->
    </test> <!-- Bug test -->
  </suite> <!-- automationTest -->
</testng-results>
